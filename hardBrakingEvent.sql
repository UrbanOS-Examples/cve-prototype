with asdf as (
    SELECT 
        timestamp, 
        cast (json_extract(messagebody,'$.coreData.accelSet.long') as double) / 100 * 3.2808399 as longAccel_ft_s2, 
        cast(json_extract(messagebody,'$.coreData.lat') as double) / 10000000 as lat, 
        cast(json_extract(messagebody,'$.coreData.long') as double) / 10000000 as long, 
        cast(json_extract(messagebody,'$.coreData.id') as bigint) as vehId, 
        cast(json_extract(messagebody,'$.coreData.heading') as double) / 80.0 as heading, 
        day_of_year(from_iso8601_timestamp(timestamp)) as doy, 
        minute(from_iso8601_timestamp(timestamp)) as minute 
    FROM smart_columbus_cve__captcha 
    where os_partition = '2021_11' 
        and messagetype = 'BSM'
),

qwer as (
    SELECT 
    vehId, 
    min(timestamp) as timestamp, 
    min_by(lat, timestamp) as lat, 
    min_by(long, timestamp) as long, 
    avg(longAccel_ft_s2) as longAccel_ft_s2, 
    avg(heading) as heading, 
    count(longAccel_ft_s2) / 10.0 as duration 
    from asdf 
    where longAccel_ft_s2 < -15.0 
    group by vehId, doy, minute
),
 
lane_buffers as (
    select sourcedevice, array_agg(ST_Buffer(ST_GeometryFromText(geometry),0.0001)) as geometry 
    from smart_columbus_cve__cve_lane_geometries 
    where ingressapproach = 'true' 
        and lanetype = 'vehicle' 
    group by sourcedevice
),
merged_lane_buffers as (
    select sourcedevice, geometry_union(geometry) as geometry 
    from lane_buffers
),
merged_lane_buffers_with_int_centerpoint as (
    select a.*, cast(json_extract(b.messagebody,'$.intersections[0].refPoint.lat') as double) / 10000000 as int_centerpoint_lat, cast(json_extract(b.messagebody,'$.intersections[0].refPoint.long') as double) / 10000000 as int_centerpoint_lon 
    from merged_lane_buffers a 
    join smart_columbus_cve__cve_latest_map_messages b on a.sourcedevice = b.sourcedevice
    ),
 
hard_brake_spatial_join as (
    SELECT a.*, b.sourcedevice, b.int_centerpoint_lat, b.int_centerpoint_lon,
 
 
    (450 - degrees(atan2( (Cos(radians(a.lat)) * Sin(radians(b.int_centerpoint_lat)) - Sin(radians(a.lat)) * Cos(radians(b.int_centerpoint_lat)) * Cos(radians(b.int_centerpoint_lon) - radians(a.long))), Sin(radians(b.int_centerpoint_lon) - radians(a.long)) * Cos(radians(b.int_centerpoint_lat))))) % 360 as vehicle_intersection_bearing
 
 
    from qwer a JOIN merged_lane_buffers_with_int_centerpoint b on st_contains(b.geometry,ST_Point(a.long, a.lat))
)
 
 
SELECT duration, heading, lat, long, longAccel_ft_s2, sourcedevice, timestamp, vehId from hard_brake_spatial_join where abs(vehicle_intersection_bearing - heading) < 45 or abs(vehicle_intersection_bearing - heading) > 315